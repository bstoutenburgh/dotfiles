---
# TODO: vscode vs vscodium

- name: include OS-specific native installation tasks
  when: vscode_installation_method in ['native', 'dnf', 'rpm', 'apt', 'deb']
  ansible.builtin.include_tasks: "vscode-{{ ansible_facts['os_family'] }}.yml"

- name: include flatpak installation tasks
  when: vscode_installation_method == 'flatpak'
  ansible.builtin.include_tasks: vscode-flatpak.yml

# WARNING: untested territory because you should be using settings sync
- name: configure settings and extensions
  when: not vscode_settings_sync
  block:
    # blindly hoping this is enough to initialize ~/.config/Code/User
    - name: register currently installed code extensions
      ansible.builtin.command:
        cmd: code --list-extensions
      register: vscode_installed_extensions
      changed_when: false

    - name: install Code extensions
      ansible.builtin.command:
        cmd: "code --install-extensions {{ item }}"
      with_items: "{{ vscode_extensions | union(vscode_additional_extensions) | unique }}"
      when: "item not in vscode_installed_extensions.stdout_lines"

    - name: write out user settings.json file
      ansible.builtin.template:
        src: settings.json.j2
        dest: "{{ ansible_user_dir }}/.config/Code/User/settings.json"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: 0664
